{"version":3,"sources":["components/Header/AbstractHeader.jsx","components/ServerAPI/utils.js","components/ServerAPI/request.js","components/ServerAPI/userAPI.js","components/login/Authorization.jsx","components/Registration/Registration.jsx","components/Refactor/RefactorAccount.jsx","components/MainPage/MainPage.jsx","components/ServerAPI/courseAPI.js","components/UserAccount/UserAccount.jsx","components/Settings/Settings.jsx","components/CoursePage/CoursePage.jsx","App.js","serviceWorker.js","index.js","components/CoursePage/CoursePage.module.css"],"names":["AbstractHeader","props","handleClickOut","event","LogOut","window","location","assign","menuItems","path","this","user","image","isAuthenticated","className","href","username","src","alt","to","onClick","Component","SearchField","name","placeholder","type","API_BASE_URL","process","REACT_APP_API_BASE_URL","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","fetch","url","then","response","json","ok","Promise","resolve","reject","checkUsernameAvailability","method","Login","handleSubmit","preventDefault","state","body","JSON","stringify","setItem","accessToken","onLogin","catch","error","status","alert","handleChangeName","setState","usernameOrEmail","target","value","handleChangePassword","password","onSubmit","id","onChange","SingUp","singupuser","document","getElementById","email","success","validateName","length","validateStatus","errorMsg","validationStatus","validateEmail","RegExp","test","validateUsername","validatePassword","handleInputChange","bind","validateUsernameAvailability","validateEmailAvailability","isFormInvalid","validationFun","inputName","inputValue","Item","help","autoComplete","onBlur","disabled","usernameValue","usernameValidation","emailValue","emailValidation","RefactorAccout","Base","CourseBlock","course","pathtocourse","courseId","title","description","Menu","MenuItem","MainPage","courses","isLoaded","loadCourses","parse","coursesList","forEach","push","UserAccount","UsersCourses","getCourses","width","height","Settings","UserSettings","render","EditName","message","handleChange","EditUserName","EditPassword","oldpassword","currentpassword","oldPassword","newPassword","repeatedPassword","validateFirstPassword","validateSecondPassword","firstpassword","secondpassword","isFormValid","activeClassName","CoursePage","loadCourseInformation","handleOnClick","pathname","styles","exact","NavBar","SettingsItem","SettingsLink","selected_link","AboutCourse","Content","CourseName","InformationAboutCourse","HeadOfINfCourse","InformationMainBody","ImageOfCourse","TextInMainBody","MarkOfTheCourse","RatingBlock","htmlFor","CommentsCourse","App","currentUser","loadUser","logOut","removeItem","component","RefactorAccount","withRouter","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.0ae0b6cd.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport './AbstractHeader.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass AbstractHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClickOut = event => {\r\n        this.props.LogOut();\r\n        window.location.assign('http://localhost:3000/mainpage');\r\n    };\r\n\r\n    render() {\r\n        let path = \"\";\r\n        if (this.props.user.image !== null) {\r\n            path = this.props.user.image;\r\n        } else {\r\n            path = \"http://cdn.onlinewebfonts.com/svg/img_51324.png\";\r\n        }\r\n        let menuItems;\r\n        if (this.props.isAuthenticated) {\r\n            menuItems = [\r\n                <nav className=\"dropDownMenu\">\r\n                    <ul className=\"topmenu\">\r\n                        <li>\r\n                            <a className=\"maina\" href=\"#\">\r\n                                <text className=\"ddusn\">{this.props.user.username}</text>\r\n                                <img className=\"ico\" src={path} alt=\"ico\"/>\r\n                                <div className=\"arrow-wrapper\">\r\n                                    &or;\r\n                                </div>\r\n                            </a>\r\n                            <ul className=\"submenu\">\r\n                                <li className=\"item\"><NavLink to={`/users/${this.props.user.username}`}>Личный\r\n                                    кабинет</NavLink></li>\r\n                                <li className=\"item\"><NavLink to=\"/settings/editname\">Настройки</NavLink></li>\r\n                                <li className=\"item\"><NavLink to=\"/mainpage\"\r\n                                                              onClick={this.handleClickOut}>Выход</NavLink></li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            ];\r\n        } else {\r\n            menuItems = [\r\n                <NavLink className=\"Reg\" to='/registration'> Регистрация </NavLink>,\r\n                <NavLink className=\"Enter\" to='/login'>Вход</NavLink>\r\n            ];\r\n        }\r\n        return (\r\n            <header className=\"Abstract-header\">\r\n                <div className=\"Header-components\">\r\n                    {menuItems}\r\n                    <SearchField/>\r\n                    <NavLink className=\"Header-text\" to=\"/mainpage\">LEARN AND CREATE</NavLink>\r\n                </div>\r\n            </header>\r\n        )\r\n    };\r\n}\r\n\r\nclass SearchField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"InputForm\">\r\n                <div className=\"Search\">\r\n                    <img src=\"http://cliparts.co/cliparts/8cG/b5q/8cGb5q86i.jpg\" alt=\"\" className=\"SearchIcon\"/>\r\n                    <input className=\"SearchInput\" name=\"s\" placeholder=\"Что ты хочешь узнать сегодня?\" type=\"search\"/>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AbstractHeader;","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'https://learning-app2.herokuapp.com/api';\r\nexport const ACCESS_TOKEN = 'accessToken';\r\n\r\nexport const NAME_MIN_LENGTH = 4;\r\nexport const NAME_MAX_LENGTH = 40;\r\n\r\nexport const USERNAME_MIN_LENGTH = 3;\r\nexport const USERNAME_MAX_LENGTH = 15;\r\n\r\nexport const EMAIL_MAX_LENGTH = 40;\r\n\r\nexport const PASSWORD_MIN_LENGTH = 6;\r\nexport const PASSWORD_MAX_LENGTH = 20;","import {ACCESS_TOKEN} from \"./utils\";\r\n\r\nexport function request(options){\r\n    const headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n    });\r\n\r\n    if(localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\r\n    }\r\n\r\n    const defaults = {headers: headers};\r\n    options = Object.assign({}, defaults, options);\r\n\r\n    return fetch(options.url, options)\r\n        .then(response =>\r\n            response.json().then(json => {\r\n                if(!response.ok) {\r\n                    return Promise.reject(json);\r\n                }\r\n                else {\r\n                    return Promise.resolve(json);\r\n                }\r\n            })\r\n        );\r\n}","import {ACCESS_TOKEN, API_BASE_URL} from \"./utils\";\r\nimport {request} from \"./request.js\"\r\n\r\nexport function login(user) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/signin\",\r\n        method: 'POST',\r\n        body: JSON.stringify(user)\r\n    });\r\n}\r\n\r\nexport function singUp(user) {\r\n    return request({\r\n        url: API_BASE_URL + \"/auth/signup\",\r\n        method: 'POST',\r\n        body: JSON.stringify(user)\r\n    });\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n    return request({\r\n        url: API_BASE_URL + \"/user/me\",\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\n\r\nexport function checkEmailAvailability(email) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function checkUsernameAvailability(username) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function editPassword(oldpassword, password) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/me/edit/password\",\r\n        method: 'PUT',\r\n        oldPassword:JSON.stringify(oldpassword),\r\n        newPassword:JSON.stringify(password),\r\n        repeatedPassword: JSON.stringify(password)\r\n    });\r\n}\r\n\r\nexport function editUsername(username) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/me/edit/username?username=\" +username,\r\n        method: 'PUT',\r\n        username: JSON.stringify(username)\r\n    });\r\n}\r\n\r\nexport function editName(name) {\r\n    return request({\r\n        url: API_BASE_URL + \"/user/me/edit/name?name=\" + name,\r\n        method: 'PUT',\r\n        name: JSON.stringify(name)\r\n    });\r\n}\r\n\r\nexport  function subscribe(courseId) {\r\n    return request({\r\n        url: API_BASE_URL + \"/course/\" + courseId,\r\n        method: 'POST'\r\n    });\r\n}","import React, {Component} from 'react';\r\nimport './Authorization.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {login} from \"../ServerAPI/userAPI\";\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            usernameOrEmail:null,\r\n            password:null\r\n        }\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        login(this.state).then(response => {\r\n            localStorage.setItem('accessToken', response.accessToken);\r\n            this.props.onLogin();\r\n            window.location.assign('https://learning-app-client.herokuapp.com/mainpage')\r\n        }).catch(error => {\r\n            if (error.status === 401) {\r\n                alert('Your Username or Password is incorrect. Please try again!');\r\n            } else {\r\n                alert('Sorry! Something went wrong. Please try again!');\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeName = event => {\r\n        this.setState({usernameOrEmail: event.target.value});\r\n    };\r\n\r\n    handleChangePassword = event => {\r\n        this.setState({password: event.target.value});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Autofication\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className='Inf'>\r\n                        <text id=\"message\">\r\n                            Вход\r\n                        </text>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"Login\" onChange={this.handleChangeName} id='login'>\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <input className='Passwordi' type='password' onChange={this.handleChangePassword} id='pass'>\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <NavLink className='ForgetPassword' to='/refactoraccount'>\r\n                            Забыли пaроль?\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" className='Check'>\r\n                            Войти\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","import React, {Component} from \"react\";\r\nimport \"./Registration.css\";\r\nimport {checkEmailAvailability, checkUsernameAvailability, singUp} from \"../ServerAPI/userAPI\";\r\nimport {Form} from \"antd\";\r\nimport {\r\n    NAME_MIN_LENGTH, NAME_MAX_LENGTH,\r\n    USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH,\r\n    EMAIL_MAX_LENGTH,\r\n    PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH\r\n} from '../ServerAPI/utils';\r\n\r\nclass SingUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                value: ''\r\n            },\r\n            username: {\r\n                value: ''\r\n            },\r\n            email: {\r\n                value: ''\r\n            },\r\n            password: {\r\n                value: ''\r\n            }\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\r\n        this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\r\n        this.isFormInvalid = this.isFormInvalid.bind(this);\r\n    }\r\n\r\n    handleInputChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;\r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName]: {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        let singupuser = {\r\n            name: document.getElementById('name').value,\r\n            email: document.getElementById('mail').value,\r\n            username: document.getElementById('username').value,\r\n            password: document.getElementById('password').value\r\n        };\r\n        singUp(singupuser).then(response => {\r\n            debugger;\r\n            if (response.success) {\r\n                window.location.assign('https://learning-app-client.herokuapp.com/login')\r\n            }\r\n        });\r\n    };\r\n\r\n    isFormInvalid() {\r\n        return !(this.state.name.validateStatus === 'success' &&\r\n            this.state.username.validateStatus === 'success' &&\r\n            this.state.email.validateStatus === 'success' &&\r\n            this.state.password.validateStatus === 'success'\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"Registration\">\r\n                <div className=\"Inf\">\r\n                    <text>Регистрация</text>\r\n                </div>\r\n                <Form.Item className='help'\r\n                           validateStatus={this.state.name.validateStatus}\r\n                           help={this.state.name.errorMsg}>\r\n                    <input className=\"Login\"\r\n                           id=\"name\"\r\n                           name=\"name\"\r\n                           placeholder='Имя и фамилия'\r\n                           value={this.state.name.value}\r\n                           onChange={(event) => this.handleInputChange(event, this.validateName)}/>\r\n                </Form.Item>\r\n                <Form.Item className='help'\r\n                           validateStatus={this.state.username.validateStatus}\r\n                           help={this.state.username.errorMsg}>\r\n                    <input className=\"Login\"\r\n                           id=\"username\"\r\n                           placeholder='username'\r\n                           name=\"username\"\r\n                           autoComplete='off'\r\n                           value={this.state.username.value}\r\n                           onBlur={this.validateUsernameAvailability}\r\n                           onChange={(event) => this.handleInputChange(event, this.validateUsername)}/>\r\n                </Form.Item>\r\n                <Form.Item className='help'\r\n                           validateStatus={this.state.email.validateStatus}\r\n                           help={this.state.email.errorMsg}>\r\n                    <input className=\"Login\"\r\n                           id=\"mail\"\r\n                           name=\"email\"\r\n                           placeholder='email'\r\n                           type='email'\r\n                           autoComplete='off'\r\n                           value={this.state.email.value}\r\n                           onBlur={this.validateEmailAvailability}\r\n                           onChange={(event) => this.handleInputChange(event, this.validateEmail)}/>\r\n                </Form.Item>\r\n                <Form.Item className='help'\r\n                           validateStatus={this.state.password.validateStatus}\r\n                           help={this.state.password.errorMsg}>\r\n                    <input className='Password'\r\n                           type='password'\r\n                           placeholder='Пароль'\r\n                           name=\"password\"\r\n                           value={this.state.password.value}\r\n                           onChange={(event) => this.handleInputChange(event, this.validatePassword)}\r\n                           id=\"password\"/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <button className='Register'\r\n                            disabled={this.isFormInvalid()}>\r\n                        Зарегистрироваться\r\n                    </button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    validateName = (name) => {\r\n        if (name.length < NAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (name.length > NAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };\r\n        }\r\n    };\r\n\r\n    validateEmail = (email) => {\r\n        if (!email) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Email may not be empty'\r\n            }\r\n        }\r\n\r\n        const EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\r\n        if (!EMAIL_REGEX.test(email)) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: 'Email not valid'\r\n            }\r\n        }\r\n\r\n        if (email.length > EMAIL_MAX_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Email is too long (Maximum ${EMAIL_MAX_LENGTH} characters allowed)`\r\n            }\r\n        }\r\n\r\n        return {\r\n            validateStatus: null,\r\n            errorMsg: null\r\n        }\r\n    };\r\n\r\n    validateUsername = (username) => {\r\n        if (username.length < USERNAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Username is too short (Minimum ${USERNAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (username.length > USERNAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Username is too long (Maximum ${USERNAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: null,\r\n                errorMsg: null\r\n            }\r\n        }\r\n    };\r\n\r\n    validateUsernameAvailability() {\r\n        // First check for client side errors in username\r\n        const usernameValue = this.state.username.value;\r\n        const usernameValidation = this.validateUsername(usernameValue);\r\n        if (usernameValidation.validateStatus === 'error') {\r\n            this.setState({\r\n                username: {\r\n                    value: usernameValue,\r\n                    ...usernameValidation\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            username: {\r\n                value: usernameValue,\r\n                validateStatus: 'validating',\r\n                errorMsg: null\r\n            }\r\n        });\r\n\r\n        checkUsernameAvailability(usernameValue)\r\n            .then(response => {\r\n                debugger;\r\n                if (response.success) {\r\n                    this.setState({\r\n                        username: {\r\n                            value: usernameValue,\r\n                            validateStatus: 'success',\r\n                            errorMsg: null\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        username: {\r\n                            value: usernameValue,\r\n                            validateStatus: 'error',\r\n                            errorMsg: 'This username is already taken'\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n            // Marking validateStatus as success, Form will be recchecked at server\r\n            this.setState({\r\n                username: {\r\n                    value: usernameValue,\r\n                    validateStatus: 'success',\r\n                    errorMsg: null\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    validateEmailAvailability() {\r\n        // First check for client side errors in email\r\n        const emailValue = this.state.email.value;\r\n        const emailValidation = this.validateEmail(emailValue);\r\n\r\n        if (emailValidation.validateStatus === 'error') {\r\n            this.setState({\r\n                email: {\r\n                    value: emailValue,\r\n                    ...emailValidation\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            email: {\r\n                value: emailValue,\r\n                validateStatus: 'validating',\r\n                errorMsg: null\r\n            }\r\n        });\r\n\r\n        checkEmailAvailability(emailValue)\r\n            .then(response => {\r\n                debugger;\r\n                if (response.success) {\r\n                    this.setState({\r\n                        email: {\r\n                            value: emailValue,\r\n                            validateStatus: 'success',\r\n                            errorMsg: null\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        email: {\r\n                            value: emailValue,\r\n                            validateStatus: 'error',\r\n                            errorMsg: 'This Email is already registered'\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n            // Marking validateStatus as success, Form will be recchecked at server\r\n            this.setState({\r\n                email: {\r\n                    value: emailValue,\r\n                    validateStatus: 'success',\r\n                    errorMsg: null\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    validatePassword = (password) => {\r\n        if (password.length < PASSWORD_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default SingUp;","import React from \"react\";\r\nimport \"./RefactorAccount.css\"\r\n\r\nfunction RefactorAccout() {\r\n    return (\r\n        <div className=\"Refactor\">\r\n            <div className='Inf'>\r\n                <text>\r\n                    Введите ваш e-mail<br></br>\r\n                    и мы пришлем ссылку для восстановления пароля\r\n                </text>\r\n            </div>\r\n            <div>\r\n                <input className=\"Login\" placeholder='e-mail' name='login'>\r\n                </input>\r\n            </div>\r\n            <div>\r\n                <button className='Refactor-button'>\r\n                    Сбросить пароль\r\n                </button>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default RefactorAccout;","import React, {Component} from \"react\";\r\nimport \"./MainPage.css\"\r\nimport {getRandomCourses} from \"../ServerAPI/courseAPI\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            courses: [],\r\n            isLoaded: false\r\n        };\r\n        this.loadCourses = this.loadCourses.bind(this);\r\n    }\r\n\r\n\r\n    loadCourses() {\r\n        getRandomCourses().then(response => {\r\n            this.setState({\r\n                courses: JSON.parse(JSON.stringify(response)),\r\n                isLoaded: true\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCourses();\r\n    }\r\n\r\n    render() {\r\n        const coursesList = [];\r\n        this.state.courses.forEach((course) => {\r\n            coursesList.push(<CourseBlock course={course}/>);\r\n        });\r\n\r\n        if (this.state.isLoaded) {\r\n            return (\r\n                <div className=\"Main\">\r\n                    <Base isAuthenticated={this.props.isAuthenticated}/>\r\n                    <Menu/>\r\n                    {coursesList}\r\n                </div>);\r\n        } else {\r\n            return (\r\n                <div className=\"Main\">\r\n                    <Base isAuthenticated={this.props.isAuthenticated}/>\r\n                    <Menu/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction Base(props) {\r\n    if (props.isAuthenticated) {\r\n        return (\r\n            <div className=\"Label\">\r\n                <div className=\"MPTitle\">\r\n                    <text>LEARN AND CREATE</text>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"Label\">\r\n                <div className=\"MPTitle\">\r\n                    <text>LEARN AND CREATE</text>\r\n                    <NavLink className=\"Try-button\" to='/registration'>Попробовать бесплатно</NavLink>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CourseBlock(props) {\r\n    let path = \"\";\r\n    if (props.course.image === null) {\r\n        path = \"https://yt3.ggpht.com/a/AGF-l7_tM_jmkKQ_T1sNRNBf-s7GZuhzFWbdEkSfHA=s900-c-k-c0xffffffff-no-rj-mo\";\r\n    } else {\r\n        path = props.course.image.url;\r\n    }\r\n\r\n    let pathtocourse = \"../course/\" + props.course.courseId;\r\n    return (\r\n        <NavLink className=\"CourseBlock\" to={pathtocourse}>\r\n            <img className=\"ImgCourse\" src={path}/>\r\n            <text className=\"CourseName\">{props.course.title}</text>\r\n            <br/>\r\n            <text className=\"CourseDescription\">{props.course.description}</text>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div className=\"Menu\">\r\n            <div> Открытый доступ ко всем направлениям искусства</div>\r\n            <div className=\"Menu-categories\">\r\n                <MenuItem name=\"Все категории\"/>\r\n                <MenuItem name=\"Дизайн\"/>\r\n                <MenuItem name=\"Каллиграфия\"/>\r\n                <MenuItem name=\"Музыка\"/>\r\n                <MenuItem name=\"Исскуство\"/>\r\n                <MenuItem name=\"Кино\"/>\r\n                <MenuItem name=\"Пение\"/>\r\n                <MenuItem name=\"Литература\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MenuItem(props) {\r\n    return (\r\n        <div className=\"Menu-item\">\r\n            {props.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import {request} from \"./request.js\"\r\nimport {ACCESS_TOKEN, API_BASE_URL} from \"./utils\";\r\n\r\nexport function getCoursesOfUser() {\r\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n        return Promise.reject(\"No access token set.\");\r\n    }\r\n    return request({\r\n        url: API_BASE_URL + \"/courses/me\",\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function getRandomCourses() {\r\n\r\n    return request({\r\n        url: API_BASE_URL + \"/courses\",\r\n        method: 'GET'\r\n    });\r\n}\r\n\r\nexport function getCourseById(courseId) {\r\n    return request({\r\n        url: API_BASE_URL + courseId,\r\n        method: 'GET',\r\n    });\r\n}","import React, {Component} from \"react\";\r\nimport \"./UserAccount.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {getCoursesOfUser, getRandomCourses} from \"../ServerAPI/courseAPI\";\r\n\r\nclass UserAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Wrapper\">\r\n                <div className=\"info\">\r\n                    <img className=\"avatar\" src=\"https://www.stickpng.com/assets/images/585e4bcdcb11b227491c3396.png\"\r\n                         alt=\"ava\"/>\r\n                    <text className=\"username\">{this.props.user.username}</text>\r\n                    <text className=\"name\">{this.props.user.name}</text>\r\n                    <text className=\"coursesCount\">Number of course subscriptions 0</text>\r\n                </div>\r\n                <hr className=\"separator\"/>\r\n                <div className=\"courses\">\r\n                    <UsersCourses/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass UsersCourses extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            courses:[],\r\n            isLoaded:false\r\n        };\r\n        this.getCourses=this.getCourses.bind(this);\r\n    }\r\n\r\n\r\n    getCourses(){\r\n        getCoursesOfUser().then(response => {\r\n            this.setState({\r\n                courses: JSON.parse(JSON.stringify(response)),\r\n                isLoaded: true\r\n            });\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.getCourses();\r\n    }\r\n\r\n    render() {\r\n        const coursesList = [];\r\n        this.state.courses.forEach((course) => {\r\n            coursesList.push(<CourseBlock course={course}/>);\r\n        });\r\n        if(this.state.isLoaded) {\r\n            return (\r\n                <div>\r\n                    {coursesList}\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n                    not found\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction CourseBlock(props) {\r\n    let path = \"\";\r\n    if (props.course.image === null) {\r\n        path = \"https://yt3.ggpht.com/a/AGF-l7_tM_jmkKQ_T1sNRNBf-s7GZuhzFWbdEkSfHA=s900-c-k-c0xffffffff-no-rj-mo\";\r\n    } else {\r\n        path = props.course.image;\r\n    }\r\n    debugger;\r\n\r\n    let pathtocourse = \"../courses/\" + props.course.courseId;\r\n    return (\r\n        <NavLink className=\"CourseBlock\" to={pathtocourse}>\r\n            <img className=\"ImgCourse\" src={path}\r\n                 width=\"100\" height=\"100\"/>\r\n            <br/>\r\n            <text className=\"Infa\">{props.course.title}</text>\r\n            <br/>\r\n            <text className=\"Infa\">{props.course.description}</text>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default UserAccount;","import React, {Component} from \"react\";\r\nimport \"./Settings.css\";\r\nimport {Switch, Route, NavLink} from \"react-router-dom\";\r\nimport {checkUsernameAvailability, editName, editPassword, editUsername} from \"../ServerAPI/userAPI\";\r\nimport {\r\n    NAME_MAX_LENGTH,\r\n    NAME_MIN_LENGTH,\r\n    PASSWORD_MAX_LENGTH,\r\n    PASSWORD_MIN_LENGTH,\r\n    USERNAME_MAX_LENGTH,\r\n    USERNAME_MIN_LENGTH\r\n} from \"../ServerAPI/utils\";\r\nimport {Form} from \"antd\";\r\n\r\nclass Settings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Settings\">\r\n                <UserSettings/>\r\n                <Switch>\r\n                    <Route path=\"/settings/editname\" render={(props) => <EditName user={this.props.user}/>}/>\r\n                    <Route path=\"/settings/editusername\" render={(props) => <EditUserName user={this.props.user}/>}/>\r\n                    <Route path=\"/settings/editpassword\" render={(props) => <EditPassword user={this.props.user}/>}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditName extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: {\r\n                value: ''\r\n            }\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateName = this.validateName.bind(this);\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        debugger;\r\n        editName(this.state.name.value).then(response => {\r\n            debugger;\r\n            alert(response.message);\r\n        }).catch(response => {\r\n            debugger;\r\n            alert(response.message);\r\n        });\r\n    };\r\n\r\n    handleChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;\r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName]: {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form className=\"MainBlock\">\r\n                <text className=\"Title\">Изменить имя</text>\r\n                <hr className=\"separator1\"/>\r\n                <text className=\"Inform\">Новое имя</text>\r\n                <Form.Item className=\"f\"\r\n                           validateStatus={this.state.name.validateStatus}\r\n                           help={this.state.name.errorMsg}>\r\n                    <input className=\"Changes\"\r\n                           placeholder=\"name\"\r\n                           name=\"name\"\r\n                           onChange={(event) => this.handleChange(event, this.validateName)}/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <button className='Submit' onClick={this.handleSubmit}>Сохранить изменения</button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    validateName = (name) => {\r\n        if (name.length < NAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (name.length > NAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };\r\n        }\r\n    };\r\n}\r\n\r\nclass EditUserName extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: {\r\n                value: ''\r\n            }\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\r\n        this.validateUsername = this.validateUsername.bind(this);\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        debugger;\r\n        editUsername(this.state.username.value).then(response => {\r\n            alert(response.message);\r\n        }).catch(response => {\r\n            alert(response.message);\r\n        });\r\n    };\r\n\r\n    handleChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;\r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName]: {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Form className=\"MainBlock\" onSubmit={this.handleSubmit}>\r\n                <text className=\"Title\">Изменить имя пользователя</text>\r\n                <hr className=\"separator1\"/>\r\n                <text className=\"Inform\">Новое имя пользователя</text>\r\n                <Form.Item className=\"f\"\r\n                           validateStatus={this.state.username.validateStatus}\r\n                           help={this.state.username.errorMsg}>\r\n                    <input className=\"Changes\"\r\n                           placeholder=\"username\"\r\n                           onBlur={this.validateUsernameAvailability}\r\n                           name=\"username\"\r\n                           onChange={(event) => this.handleChange(event, this.validateUsername)}/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <button className='Submit'>Сохранить изменения</button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    validateUsername = (username) => {\r\n        if (username.length < USERNAME_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Username is too short (Minimum ${USERNAME_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (username.length > USERNAME_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Username is too long (Maximum ${USERNAME_MAX_LENGTH} characters allowed.)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: null,\r\n                errorMsg: null\r\n            }\r\n        }\r\n    };\r\n\r\n    validateUsernameAvailability() {\r\n        // First check for client side errors in username\r\n        debugger;\r\n        const usernameValue = this.state.username.value;\r\n        const usernameValidation = this.validateUsername(usernameValue);\r\n        if (usernameValidation.validateStatus === 'error') {\r\n            this.setState({\r\n                username: {\r\n                    value: usernameValue,\r\n                    ...usernameValidation\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            username: {\r\n                value: usernameValue,\r\n                validateStatus: 'validating',\r\n                errorMsg: null\r\n            }\r\n        });\r\n\r\n        checkUsernameAvailability(usernameValue)\r\n            .then(response => {\r\n                if (response.success) {\r\n                    this.setState({\r\n                        username: {\r\n                            value: usernameValue,\r\n                            validateStatus: 'success',\r\n                            errorMsg: null\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        username: {\r\n                            value: usernameValue,\r\n                            validateStatus: 'error',\r\n                            errorMsg: 'This username is already taken'\r\n                        }\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n            // Marking validateStatus as success, Form will be recchecked at server\r\n            this.setState({\r\n                username: {\r\n                    value: usernameValue,\r\n                    validateStatus: 'success',\r\n                    errorMsg: null\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n}\r\n\r\nclass EditPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentpassword: {\r\n                value: ''\r\n            },\r\n            firstpassword: {\r\n                value: ''\r\n            },\r\n            secondpassword: {\r\n                value: ''\r\n            }\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validateFirstPassword = this.validateFirstPassword.bind(this);\r\n        this.validateSecondPassword = this.validateSecondPassword.bind(this);\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        editPassword(this.state.currentpassword, this.state.password).then(response => {\r\n            alert(response.message);\r\n        }).catch(response => {\r\n            alert(response.message);\r\n        });\r\n    };\r\n\r\n    handleChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;\r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName]: {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    };\r\n\r\n    isFormValid() {\r\n        return !(this.state.firstpassword.validateStatus === 'success' &&\r\n            this.state.secondpassword.validateStatus === 'success');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"MainBlock\">\r\n                <text className=\"Title\">Изменить пароль</text>\r\n                <hr className=\"separator1\"/>\r\n                <text className=\"Inform\">Текущий пароль</text>\r\n                <Form.Item className=\"f\">\r\n                    <input className=\"Changes\"\r\n                           placeholder=\"your password\"\r\n                           name=\"currentpassword\"\r\n                           value={this.state.currentpassword.value}\r\n                           onChange={(event) => this.handleChange(event, this.validateFirstPassword)}/>\r\n                </Form.Item>\r\n                <text className=\"Inform1\">Новый пароль</text>\r\n                <Form.Item className=\"f\"\r\n                           validateStatus={this.state.firstpassword.validateStatus}\r\n                           help={this.state.firstpassword.errorMsg}>\r\n                    <input className=\"Changes\"\r\n                           placeholder=\"new password\"\r\n                           name=\"firstpassword\"\r\n                           value={this.state.firstpassword.value}\r\n                           onChange={(event) => this.handleChange(event, this.validateFirstPassword)}/>\r\n                </Form.Item>\r\n                <text className=\"Inform2\">Повторите новый пароль</text>\r\n                <Form.Item className=\"f\"\r\n                           validateStatus={this.state.secondpassword.validateStatus}\r\n                           help={this.state.secondpassword.errorMsg}>\r\n                    <input className=\"Changes\"\r\n                           placeholder=\"repeat new password\"\r\n                           name=\"secondpassword\"\r\n                           value={this.state.secondpassword.value}\r\n                           onChange={(event) => this.handleChange(event, this.validateSecondPassword)}/>\r\n                </Form.Item>\r\n                <div>\r\n                    <button className='Submit' disabled={this.isFormValid}>Сохранить изменения</button>\r\n                </div>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    validateFirstPassword = (password) => {\r\n        if (password.length < PASSWORD_MIN_LENGTH) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Password is too short (Minimum ${PASSWORD_MIN_LENGTH} characters needed.)`\r\n            }\r\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\r\n            return {\r\n                validationStatus: 'error',\r\n                errorMsg: `Password is too long (Maximum ${PASSWORD_MAX_LENGTH} characters allowed.)`\r\n            };\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };\r\n        }\r\n    };\r\n\r\n    validateSecondPassword = (password) => {\r\n        if (password !== this.state.firstpassword.value) {\r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `Passwords are not equal)`\r\n            }\r\n        } else {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };\r\n        }\r\n    };\r\n}\r\n\r\nfunction UserSettings() {\r\n    return (\r\n        <ul className=\"UserSettings\">\r\n            <li className=\"SettingsItem\">\r\n                <NavLink to=\"/settings/editname\" className=\"SettingsLink\" activeClassName=\"selected_link\">Изменить\r\n                    имя</NavLink>\r\n            </li>\r\n            <li className=\"SettingsItem\">\r\n                <NavLink to=\"/settings/editusername\" className=\"SettingsLink\" activeClassName=\"selected_link\">Изменить\r\n                    имя пользователя</NavLink>\r\n            </li>\r\n            <li className=\"SettingsItem\">\r\n                <NavLink to=\"/settings/editpassword\" className=\"SettingsLink\" activeClassName=\"selected_link\">Изменить\r\n                    пароль</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React, {Component} from 'react';\r\nimport './CoursePage.module.css';\r\nimport {Switch, Route, NavLink} from \"react-router-dom\";\r\nimport {getCourseById} from \"../ServerAPI/courseAPI\";\r\nimport {subscribe} from \"../ServerAPI/userAPI\";\r\nimport styles from \"./CoursePage.module.css\";\r\n\r\n\r\nclass CoursePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            course: null,\r\n            isLoaded: false\r\n        };\r\n        this.loadCourseInformation = this.loadCourseInformation.bind(this);\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n    }\r\n\r\n    loadCourseInformation() {\r\n        getCourseById(window.location.pathname).then(response => {\r\n            this.setState({\r\n                course: response,\r\n                isLoaded: true\r\n            });\r\n        }).catch(response => {\r\n            alert(response.message);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCourseInformation();\r\n    }\r\n\r\n    handleOnClick() {\r\n        subscribe(this.state.course.courseId).then(response => {\r\n            alert(response);\r\n        }).catch(response => {\r\n            alert(response.message);\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.isLoaded) {\r\n            return (\r\n                <div className={styles.CoursePage}>\r\n                    <NavBar courseId={this.state.course.courseId}/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <Switch>\r\n                        <Route exact path={\"/course/\" + this.state.course.courseId}\r\n                               render={(props) => <AboutCourse user={this.props.user} course={this.state.course}/>}/>\r\n                        <Route exact path={\"/course/\" + this.state.course.courseId + \"/comments\"}\r\n                               render={(props) => <CommentsCourse user={this.props.user}/>}/>\r\n                    </Switch>\r\n                    <br/>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={styles.NavBar}>\r\n                <li className={styles.SettingsItem}>\r\n                    <NavLink to={\"/course/\" + this.props.courseId} className={styles.SettingsLink}\r\n                             exact activeClassName={styles.selected_link}>О курсе</NavLink>\r\n                </li>\r\n                <li className={styles.SettingsItem}>\r\n                    <NavLink to={\"/course/\" + this.props.courseId + \"/comments\"} className={styles.SettingsLink}\r\n                             activeClassName={styles.selected_link}>Комментарии</NavLink>\r\n                </li>\r\n                <li className={styles.SettingsItem}>\r\n                    <NavLink to={\"/course/\" + this.props.courseId + \"/feedback\"} className={styles.SettingsLink}\r\n                             activeClassName={styles.selected_link}>Отзывы</NavLink>\r\n                </li>\r\n                <li className={styles.SettingsItem}>\r\n                    <NavLink to={\"/course/\" + this.props.courseId + \"/xyi\"} className={styles.SettingsLink}\r\n                             activeClassName={styles.selected_link}>Содержание</NavLink>\r\n                </li>\r\n            </ul>\r\n        )\r\n    };\r\n}\r\n\r\nclass AboutCourse extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        return (\r\n            <div className={styles.Content}>\r\n                <header className={styles.CourseName}>{this.props.course.title}</header>\r\n                <div className={styles.InformationAboutCourse}>\r\n                    <header className={styles.HeadOfINfCourse}>О курсе</header>\r\n                    <div className={styles.InformationMainBody}>\r\n                        <img className={styles.ImageOfCourse} src={this.props.course.image.url}/>\r\n                        <text className={styles.TextInMainBody}>\r\n                            The UI/UX Design Specialization brings a design-centric approach to user interface and user\r\n                            experience design, and offers practical, skill-based instruction centered around a visual\r\n                            communications perspective, rather than on one focused on marketing or programming alone. In\r\n                            this sequence of four courses, you will summarize and demonstrate all stages of the UI/UX\r\n                            development process, from user research to defining a project’s strategy, scope, and\r\n                            information architecture, to developing sitemaps and wireframes. You’ll learn current best\r\n                            practices and conventions in UX design and apply them to create effective and compelling\r\n                            screen-based experiences for websites or <apps className=\"\"></apps>\r\n                            User interface and user experience design is a high-demand field, but the skills and\r\n                            knowledge you will learn in this Specialization are applicable to a wide variety of careers,\r\n                            from marketing to web design to human-computer interaction.\r\n                        </text>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.MarkOfTheCourse}>\r\n                    <RatingBlock/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RatingBlock() {\r\n    return (\r\n        <div className=\"rating_block\">\r\n            <input name=\"rating\" value=\"5\" id=\"rating_5\" type=\"radio\"/>\r\n            <label htmlFor=\"rating_5\" className=\"label_rating\"></label>\r\n\r\n            <input name=\"rating\" value=\"4\" id=\"rating_4\" type=\"radio\"/>\r\n            <label htmlFor=\"rating_4\" className=\"label_rating\"></label>\r\n\r\n            <input name=\"rating\" value=\"3\" id=\"rating_3\" type=\"radio\"/>\r\n            <label htmlFor=\"rating_3\" className=\"label_rating\"></label>\r\n\r\n            <input name=\"rating\" value=\"2\" id=\"rating_2\" type=\"radio\"/>\r\n            <label htmlFor=\"rating_2\" className=\"label_rating\"></label>\r\n\r\n            <input name=\"rating\" value=\"1\" id=\"rating_1\" type=\"radio\"/>\r\n            <label htmlFor=\"rating_1\" className=\"label_rating\"></label>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nclass CommentsCourse extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Content}>\r\n                asdsdad\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoursePage;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport AbstractHeader from \"./components/Header/AbstractHeader\";\r\nimport Login from \"./components/login/Authorization\";\r\nimport {Switch, Route, withRouter} from \"react-router-dom\";\r\nimport Registration from \"./components/Registration/Registration\";\r\nimport RefactorAccount from \"./components/Refactor/RefactorAccount\";\r\nimport MainPage from \"./components/MainPage/MainPage\";\r\nimport {getCurrentUser} from \"./components/ServerAPI/userAPI.js\";\r\nimport UserAccount from \"./components/UserAccount/UserAccount\";\r\nimport {ACCESS_TOKEN} from \"./components/ServerAPI/utils\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport CoursePage from \"./components/CoursePage/CoursePage\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: {\r\n                name: null,\r\n                username: null,\r\n                email: null,\r\n                password: null\r\n            },\r\n            isAuthenticated: false,\r\n            isLoaded: false\r\n        };\r\n        this.loadUser = this.loadUser.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    loadUser() {\r\n        getCurrentUser().then(response => {\r\n            this.setState({\r\n                currentUser: response,\r\n                isAuthenticated: true,\r\n                isLoaded: true\r\n            });\r\n        }).catch(response => {\r\n            this.setState({\r\n                isLoaded: true\r\n            });\r\n        });\r\n    }\r\n\r\n    logOut() {\r\n        localStorage.removeItem(ACCESS_TOKEN);\r\n        this.setState({\r\n            currentUser: null,\r\n            isAuthenticated: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUser();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoaded) {\r\n            return (\r\n                <div className=\"Abstract-wrapper\">\r\n                    <AbstractHeader LogOut={this.logOut} user={this.state.currentUser}\r\n                                    isAuthenticated={this.state.isAuthenticated}/>\r\n                    <Switch>\r\n                        <Route path=\"/refactoraccount\" component={RefactorAccount}/>\r\n                        <Route path=\"/login\"\r\n                               render={(props) => <Login onLogin={this.loadUser}/>}/>\r\n                        <Route path='/registration'\r\n                               render={(props) => <Registration/>}/>\r\n                        <Route path='/mainpage'\r\n                               render={(props) => <MainPage isAuthenticated={this.state.isAuthenticated}/>}/>\r\n                        <Route path='/settings'\r\n                               render={(props) => <Settings user={this.state.currentUser}/>}/>\r\n                        <Route path='/users/:username'\r\n                               render={(props) => <UserAccount user={this.state.currentUser}/>}/>\r\n                        <Route path='/course/:courseId' render={(props) => <CoursePage/>}/>\r\n                    </Switch>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"Abstract-wrapper\">\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'https://learning-app-client.herokuapp.com/' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CoursePage\":\"CoursePage_CoursePage__1imQx\",\"NavBar\":\"CoursePage_NavBar__2kWlO\",\"SettingsItem\":\"CoursePage_SettingsItem__1TaJP\",\"SettingsLink\":\"CoursePage_SettingsLink__3vdS0\",\"selected_link\":\"CoursePage_selected_link__2-qOP\",\"ImgAbout\":\"CoursePage_ImgAbout__2N6Km\",\"Subscribe\":\"CoursePage_Subscribe__3feI4\",\"Content\":\"CoursePage_Content__2k3Y2\",\"CourseName\":\"CoursePage_CourseName__3EBAj\",\"HeadOfINfCourse\":\"CoursePage_HeadOfINfCourse__2VFVG\",\"ImageOfCourse\":\"CoursePage_ImageOfCourse__2rrQ-\",\"InformationAboutCourse\":\"CoursePage_InformationAboutCourse__lnHbU\",\"InformationMainBody\":\"CoursePage_InformationMainBody__1a2TK\",\"TextInMainBody\":\"CoursePage_TextInMainBody__sh-DV\",\"MarkOfTheCourse\":\"CoursePage_MarkOfTheCourse__3_V2o\",\"rating-area\":\"CoursePage_rating-area__5R0q2\",\"rating_block\":\"CoursePage_rating_block__1ZHfA\",\"label_rating\":\"CoursePage_label_rating__1Dl4B\"};"],"sourceRoot":""}